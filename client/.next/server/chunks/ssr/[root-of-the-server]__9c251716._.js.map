{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/Desktop/ZENVOK/client/src/components/loading-screen.jsx"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { gsap } from \"gsap\";\r\n\r\nexport default function LoadingScreen() {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Only run on client-side\r\n    if (typeof window === \"undefined\") return;\r\n\r\n    // Check if this is first visit in this session\r\n    const hasVisitedBefore = sessionStorage.getItem(\"hasVisitedHomePage\");\r\n\r\n    // Only show loading on first visit in this session\r\n    if (!hasVisitedBefore) {\r\n      setIsLoading(true);\r\n\r\n      // Mark that user has visited homepage in this session\r\n      sessionStorage.setItem(\"hasVisitedHomePage\", \"true\");\r\n\r\n      // Initial animation for the loading screen\r\n      gsap.fromTo(\r\n        \".loading-content\",\r\n        { opacity: 0, y: -20 },\r\n        { opacity: 1, y: 0, duration: 1, ease: \"power2.out\" }\r\n      );\r\n\r\n      // Set a timeout to trigger the exit animation\r\n      const timer = setTimeout(() => {\r\n        // Exit animation - slide down\r\n        gsap.to(\".loading-screen\", {\r\n          y: \"100%\",\r\n          duration: 1.2,\r\n          ease: \"power3.inOut\",\r\n          onComplete: () => setIsLoading(false),\r\n        });\r\n      }, 2500); // Adjust time as needed\r\n\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, []);\r\n\r\n  if (!isLoading) return null;\r\n\r\n  return (\r\n    <div className=\"loading-screen fixed inset-0 bg-white z-50 flex items-center justify-center\">\r\n      <div className=\"loading-content text-center\">\r\n        <h1 className=\"text-2xl tracking-tight\">\r\n          Tomorrow&apos;s World, Designed.â„¢\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AADA;;;;AAIe,SAAS;IACtB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,0BAA0B;QAC1B,wCAAmC;;QAEnC,+CAA+C;QAC/C,MAAM;IA6BR,GAAG,EAAE;IAEL,IAAI,CAAC,WAAW,OAAO;IAEvB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAG,WAAU;0BAA0B;;;;;;;;;;;;;;;;AAMhD","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/User/Desktop/ZENVOK/client/src/app/layout.js"],"sourcesContent":["\"use client\";\r\nimport { useEffect } from \"react\";\r\nimport Lenis from \"lenis\";\r\nimport \"./globals.css\";\r\nimport LoadingScreen from \"@/components/loading-screen\";\r\nimport { usePathname } from \"next/navigation\";\r\n\r\nexport default function RootLayout({ children }) {\r\n  const pathname = usePathname();\r\n  const isHomePage = pathname === \"/\";\r\n\r\n  // Initialize smooth scrolling with Lenis\r\n  useEffect(() => {\r\n    const lenis = new Lenis({\r\n      duration: 1.2,\r\n      easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n      direction: \"vertical\",\r\n      smooth: true,\r\n    });\r\n\r\n    function raf(time) {\r\n      lenis.raf(time);\r\n      requestAnimationFrame(raf);\r\n    }\r\n\r\n    requestAnimationFrame(raf);\r\n\r\n    return () => {\r\n      lenis.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <html lang=\"en\">\r\n      <body className=\"antialiased\">\r\n        {/* Only show loading screen on homepage */}\r\n        {isHomePage && <LoadingScreen />}\r\n        {children}\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;AAEA;AACA;AALA;;;;;;;AAOe,SAAS,WAAW,EAAE,QAAQ,EAAE;IAC7C,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,aAAa,aAAa;IAEhC,yCAAyC;IACzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,QAAQ,IAAI,uIAAA,CAAA,UAAK,CAAC;YACtB,UAAU;YACV,QAAQ,CAAC,IAAM,KAAK,GAAG,CAAC,GAAG,QAAQ,KAAK,GAAG,CAAC,GAAG,CAAC,KAAK;YACrD,WAAW;YACX,QAAQ;QACV;QAEA,SAAS,IAAI,IAAI;YACf,MAAM,GAAG,CAAC;YACV,sBAAsB;QACxB;QAEA,sBAAsB;QAEtB,OAAO;YACL,MAAM,OAAO;QACf;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC;QAAK,MAAK;kBACT,cAAA,8OAAC;YAAK,WAAU;;gBAEb,4BAAc,8OAAC,uIAAA,CAAA,UAAa;;;;;gBAC5B;;;;;;;;;;;;AAIT","debugId":null}}]
}